`F-value` = paste("F", as.character(round(lmer1anova$NumDF, digits=5)), ",", as.character(round(lmer1anova$DenDF, digits = 5)), " = ", as.character(round(lmer1anova$`F value`, digits = 5)), sep="")
## compile into output frame
tmpStats = data.frame(descript, testunit, comparison, `Group Size`, `P-value`, significance,`F-value`)
outputStats = rbind(outputStats, tmpStats)
## output all stats details
statStr = paste(gt, "|", descript, "|", comparison, "|", "n =", as.character(nUnit[1]), ", n =", as.character(nUnit[2]), testunit, "|", "p =", as.character(round(lmer1anova$`Pr(>F)`, digits = 5)), "|", "F", as.character(round(lmer1anova$NumDF, digits = 5)), as.character(round(lmer1anova$DenDF, digits = 5)), "=", as.character(round(lmer1anova$`F value`, digits = 5)))
sink(txtFilename, append = TRUE)
print(paste("~~~~~~~ group = ", gt))
print(report(obj.lmer1))
print(statStr)
print(summary(obj.lmer1))
print(anova(obj.lmer1, ddf="Kenward-Roger"))
print ("-------------------------------------------------------")
sink()
closeAllConnections()
write.csv(outputStats, csvFilename)
}
##### Ripples - Per Trial - By Group - Unoccupied zone decoding vs. not - licklatency #####
## this data structure only includes correct trials and post data
## load data file
fileN = "TableData_TrialData_360Decoding_Ripples_otherzone_pertrial.txt"
dt = "ripples_RZ_OtherZoneDecoding_pertrial_pergroup_licklatency"
propTypes <-c("licklatency_s")
groupTypes <-c ("random", "gamma")
#initialize table structure to add stats to
outputStats = data.frame()
tblFilename = paste0(foldN, fileN)
txtFilename = paste0(foldN, "/stats_lme4_", dt, ".txt") #create text file to save LMM outputs
csvFilename = paste0(foldN, "/stats_lme4_", dt, '.csv') #create a csv that can be used for supplement table
#initialize text file
close(file(txtFilename, open="w" ) )
#read data
mydata <- read.csv(tblFilename, head=T)
for (gt in groupTypes) {
## get data subset of interest
testData <- mydata[mydata$group == gt,]
#factorize variables to be treated as categories/levels instead of numerical value
testData$animal = as.factor(testData$animal)
testData$group = as.factor(testData$group)
testData$isNonLocal = as.factor(testData$isNonLocal)
#helpful info for stats (n per group)
nUnit = c(sum(testData$isNonLocal == 0), sum(testData$isNonLocal == 1))
## loop over property types
## set up helpful info for the model
descript = 'Ctrl speed Other zone vs. not'
comparison = "Other zone decoding vs not"
testunit = "trials"
significance = '=IF(F2<0.001,"****",IF(F2<0.005,"***",IF(F2<0.01,"**",IF(F2<0.05,"*","ns"))))' #this is the formula for the excel file, it will evaluate in excel
## model, anova
obj.lmer1 = lmerTest::lmer(licklatency_s ~ isNonLocal + (1|animal), data = testData)
lmer1anova = anova(obj.lmer1, ddf="Kenward-Roger")
## set up strings for the output
`Group Size` = paste(gt, " -- n =", as.character(nUnit[1]), "; n =", as.character(nUnit[2]))
analysisUnit = "trials"
`P-value` = round(lmer1anova$`Pr(>F)`, digits = 20)
`F-value` = paste("F", as.character(round(lmer1anova$NumDF, digits=5)), ",", as.character(round(lmer1anova$DenDF, digits = 5)), " = ", as.character(round(lmer1anova$`F value`, digits = 5)), sep="")
## compile into output frame
tmpStats = data.frame(descript, testunit, comparison, `Group Size`, `P-value`, significance,`F-value`)
outputStats = rbind(outputStats, tmpStats)
## output all stats details
statStr = paste(gt, "|", descript, "|", comparison, "|", "n =", as.character(nUnit[1]), ", n =", as.character(nUnit[2]), testunit, "|", "p =", as.character(round(lmer1anova$`Pr(>F)`, digits = 5)), "|", "F", as.character(round(lmer1anova$NumDF, digits = 5)), as.character(round(lmer1anova$DenDF, digits = 5)), "=", as.character(round(lmer1anova$`F value`, digits = 5)))
sink(txtFilename, append = TRUE)
print(paste("~~~~~~~ group = ", gt))
print(report(obj.lmer1))
print(statStr)
print(summary(obj.lmer1))
print(anova(obj.lmer1, ddf="Kenward-Roger"))
print ("-------------------------------------------------------")
sink()
closeAllConnections()
write.csv(outputStats, csvFilename)
}
##### proportion of trials with unoccupied zone decoding by fast/slow #####
## this data structure only includes correct trials and post data
## load data file
fileN = "TableData_DayData_360Decoding_ThetaSeq_PCR_OtherZoneDecoding.txt"
dt = "thetaseq_RRZ_OtherZoneDecoding_perday_pergroup_splitbytrialspeed"
propTypes <-c("prop_otherZone_byspeed")
groupTypes <-c ("random", "gamma")
#initialize table structure to add stats to
outputStats = data.frame()
tblFilename = paste0(foldN, fileN)
txtFilename = paste0(foldN, "/stats_lme4_", dt, ".txt") #create text file to save LMM outputs
csvFilename = paste0(foldN, "/stats_lme4_", dt, '.csv') #create a csv that can be used for supplement table
#initialize text file
close(file(txtFilename, open="w" ) )
#read data
mydata <- read.csv(tblFilename, head=T)
for (gt in groupTypes) {
## get data subset of interest
testData <- mydata[mydata$group == gt,]
#factorize variables to be treated as categories/levels instead of numerical value
testData$animal = as.factor(testData$animal)
testData$group = as.factor(testData$group)
testData$speedType = as.factor(testData$speedType)
#helpful info for stats (n per group)
nUnit = c(sum(testData$speedType == 0), sum(testData$speedType == 1))
## loop over property types
## set up helpful info for the model
descript = 'prop trials with unoccupied zone decoding by speed type'
comparison = "within group across speed types"
testunit = "days"
significance = '=IF(F2<0.001,"****",IF(F2<0.005,"***",IF(F2<0.01,"**",IF(F2<0.05,"*","ns"))))' #this is the formula for the excel file, it will evaluate in excel
## model, anova
obj.lmer1 = lmerTest::lmer(propNonLocal ~ speedType + (1|animal), data = testData)
lmer1anova = anova(obj.lmer1, ddf="Kenward-Roger")
## set up strings for the output
`Group Size` = paste(gt, " -- n =", as.character(nUnit[1]), "; n =", as.character(nUnit[2]))
analysisUnit = "trials"
`P-value` = round(lmer1anova$`Pr(>F)`, digits = 20)
`F-value` = paste("F", as.character(round(lmer1anova$NumDF, digits=5)), ",", as.character(round(lmer1anova$DenDF, digits = 5)), " = ", as.character(round(lmer1anova$`F value`, digits = 5)), sep="")
## compile into output frame
tmpStats = data.frame(descript, testunit, comparison, `Group Size`, `P-value`, significance,`F-value`)
outputStats = rbind(outputStats, tmpStats)
## output all stats details
statStr = paste(gt, "|", descript, "|", comparison, "|", "n =", as.character(nUnit[1]), ", n =", as.character(nUnit[2]), testunit, "|", "p =", as.character(round(lmer1anova$`Pr(>F)`, digits = 5)), "|", "F", as.character(round(lmer1anova$NumDF, digits = 5)), as.character(round(lmer1anova$DenDF, digits = 5)), "=", as.character(round(lmer1anova$`F value`, digits = 5)))
sink(txtFilename, append = TRUE)
print(paste("~~~~~~~ group = ", gt))
print(report(obj.lmer1))
print(statStr)
print(summary(obj.lmer1))
print(anova(obj.lmer1, ddf="Kenward-Roger"))
print ("-------------------------------------------------------")
sink()
closeAllConnections()
write.csv(outputStats, csvFilename)
}
##### Ripples - Per Trial - By Group - Unoccupied zone decoding vs. not - Ctrl Speed #####
## this data structure only includes correct trials and post data
## load data file
fileN = "TableData_TrialData_360Decoding_Ripples_otherzone_pertrial.txt"
dt = "ripples_RZ_OtherZoneDecoding_pertrial_pergroup_CtrlSpeed"
propTypes <-c("Ctrl_speed")
groupTypes <-c ("random", "gamma")
#initialize table structure to add stats to
outputStats = data.frame()
tblFilename = paste0(foldN, fileN)
txtFilename = paste0(foldN, "/stats_lme4_", dt, ".txt") #create text file to save LMM outputs
csvFilename = paste0(foldN, "/stats_lme4_", dt, '.csv') #create a csv that can be used for supplement table
#initialize text file
close(file(txtFilename, open="w" ) )
#read data
mydata <- read.csv(tblFilename, head=T)
for (gt in groupTypes) {
## get data subset of interest
testData <- mydata[mydata$group == gt,]
#factorize variables to be treated as categories/levels instead of numerical value
testData$animal = as.factor(testData$animal)
testData$group = as.factor(testData$group)
testData$isNonLocal = as.factor(testData$isNonLocal)
#helpful info for stats (n per group)
nUnit = c(sum(testData$isNonLocal == 0), sum(testData$isNonLocal == 1))
## loop over property types
## set up helpful info for the model
descript = 'Ctrl speed Other zone vs. not'
comparison = "Other zone decoding vs not"
testunit = "trials"
significance = '=IF(F2<0.001,"****",IF(F2<0.005,"***",IF(F2<0.01,"**",IF(F2<0.05,"*","ns"))))' #this is the formula for the excel file, it will evaluate in excel
## model, anova
obj.lmer1 = lmerTest::lmer(Ctrl_speed ~ isNonLocal + (1|animal), data = testData)
lmer1anova = anova(obj.lmer1, ddf="Kenward-Roger")
## set up strings for the output
`Group Size` = paste(gt, " -- n =", as.character(nUnit[1]), "; n =", as.character(nUnit[2]))
analysisUnit = "trials"
`P-value` = round(lmer1anova$`Pr(>F)`, digits = 20)
`F-value` = paste("F", as.character(round(lmer1anova$NumDF, digits=5)), ",", as.character(round(lmer1anova$DenDF, digits = 5)), " = ", as.character(round(lmer1anova$`F value`, digits = 5)), sep="")
## compile into output frame
tmpStats = data.frame(descript, testunit, comparison, `Group Size`, `P-value`, significance,`F-value`)
outputStats = rbind(outputStats, tmpStats)
## output all stats details
statStr = paste(gt, "|", descript, "|", comparison, "|", "n =", as.character(nUnit[1]), ", n =", as.character(nUnit[2]), testunit, "|", "p =", as.character(round(lmer1anova$`Pr(>F)`, digits = 5)), "|", "F", as.character(round(lmer1anova$NumDF, digits = 5)), as.character(round(lmer1anova$DenDF, digits = 5)), "=", as.character(round(lmer1anova$`F value`, digits = 5)))
sink(txtFilename, append = TRUE)
print(paste("~~~~~~~ group = ", gt))
print(report(obj.lmer1))
print(statStr)
print(summary(obj.lmer1))
print(anova(obj.lmer1, ddf="Kenward-Roger"))
print ("-------------------------------------------------------")
sink()
closeAllConnections()
write.csv(outputStats, csvFilename)
}
##### Ripples - Per Trial - By Group - Unoccupied zone decoding vs. not - Lick DI #####
## this data structure only includes correct trials and post data
## load data file
fileN = "TableData_TrialData_360Decoding_Ripples_otherzone_pertrial.txt"
dt = "ripples_RZ_OtherZoneDecoding_pertrial_pergroup_lickDI"
propTypes <-c("lickDI")
groupTypes <-c ("random", "gamma")
#initialize table structure to add stats to
outputStats = data.frame()
tblFilename = paste0(foldN, fileN)
txtFilename = paste0(foldN, "/stats_lme4_", dt, ".txt") #create text file to save LMM outputs
csvFilename = paste0(foldN, "/stats_lme4_", dt, '.csv') #create a csv that can be used for supplement table
#initialize text file
close(file(txtFilename, open="w" ) )
#read data
mydata <- read.csv(tblFilename, head=T)
for (gt in groupTypes) {
## get data subset of interest
testData <- mydata[mydata$group == gt,]
#factorize variables to be treated as categories/levels instead of numerical value
testData$animal = as.factor(testData$animal)
testData$group = as.factor(testData$group)
testData$isNonLocal = as.factor(testData$isNonLocal)
#helpful info for stats (n per group)
nUnit = c(sum(testData$isNonLocal == 0), sum(testData$isNonLocal == 1))
## loop over property types
## set up helpful info for the model
descript = 'Ctrl speed Other zone vs. not'
comparison = "Other zone decoding vs not"
testunit = "trials"
significance = '=IF(F2<0.001,"****",IF(F2<0.005,"***",IF(F2<0.01,"**",IF(F2<0.05,"*","ns"))))' #this is the formula for the excel file, it will evaluate in excel
## model, anova
obj.lmer1 = lmerTest::lmer(lickDI ~ isNonLocal + (1|animal), data = testData)
lmer1anova = anova(obj.lmer1, ddf="Kenward-Roger")
## set up strings for the output
`Group Size` = paste(gt, " -- n =", as.character(nUnit[1]), "; n =", as.character(nUnit[2]))
analysisUnit = "trials"
`P-value` = round(lmer1anova$`Pr(>F)`, digits = 20)
`F-value` = paste("F", as.character(round(lmer1anova$NumDF, digits=5)), ",", as.character(round(lmer1anova$DenDF, digits = 5)), " = ", as.character(round(lmer1anova$`F value`, digits = 5)), sep="")
## compile into output frame
tmpStats = data.frame(descript, testunit, comparison, `Group Size`, `P-value`, significance,`F-value`)
outputStats = rbind(outputStats, tmpStats)
## output all stats details
statStr = paste(gt, "|", descript, "|", comparison, "|", "n =", as.character(nUnit[1]), ", n =", as.character(nUnit[2]), testunit, "|", "p =", as.character(round(lmer1anova$`Pr(>F)`, digits = 5)), "|", "F", as.character(round(lmer1anova$NumDF, digits = 5)), as.character(round(lmer1anova$DenDF, digits = 5)), "=", as.character(round(lmer1anova$`F value`, digits = 5)))
sink(txtFilename, append = TRUE)
print(paste("~~~~~~~ group = ", gt))
print(report(obj.lmer1))
print(statStr)
print(summary(obj.lmer1))
print(anova(obj.lmer1, ddf="Kenward-Roger"))
print ("-------------------------------------------------------")
sink()
closeAllConnections()
write.csv(outputStats, csvFilename)
}
##### Ripples - Per Trial - By Group - Unoccupied zone decoding vs. not - licklatency #####
## this data structure only includes correct trials and post data
## load data file
fileN = "TableData_TrialData_360Decoding_Ripples_otherzone_pertrial.txt"
dt = "ripples_RZ_OtherZoneDecoding_pertrial_pergroup_licklatency"
propTypes <-c("licklatency_s")
groupTypes <-c ("random", "gamma")
#initialize table structure to add stats to
outputStats = data.frame()
tblFilename = paste0(foldN, fileN)
txtFilename = paste0(foldN, "/stats_lme4_", dt, ".txt") #create text file to save LMM outputs
csvFilename = paste0(foldN, "/stats_lme4_", dt, '.csv') #create a csv that can be used for supplement table
#initialize text file
close(file(txtFilename, open="w" ) )
#read data
mydata <- read.csv(tblFilename, head=T)
for (gt in groupTypes) {
## get data subset of interest
testData <- mydata[mydata$group == gt,]
#factorize variables to be treated as categories/levels instead of numerical value
testData$animal = as.factor(testData$animal)
testData$group = as.factor(testData$group)
testData$isNonLocal = as.factor(testData$isNonLocal)
#helpful info for stats (n per group)
nUnit = c(sum(testData$isNonLocal == 0), sum(testData$isNonLocal == 1))
## loop over property types
## set up helpful info for the model
descript = 'Ctrl speed Other zone vs. not'
comparison = "Other zone decoding vs not"
testunit = "trials"
significance = '=IF(F2<0.001,"****",IF(F2<0.005,"***",IF(F2<0.01,"**",IF(F2<0.05,"*","ns"))))' #this is the formula for the excel file, it will evaluate in excel
## model, anova
obj.lmer1 = lmerTest::lmer(licklatency_s ~ isNonLocal + (1|animal), data = testData)
lmer1anova = anova(obj.lmer1, ddf="Kenward-Roger")
## set up strings for the output
`Group Size` = paste(gt, " -- n =", as.character(nUnit[1]), "; n =", as.character(nUnit[2]))
analysisUnit = "trials"
`P-value` = round(lmer1anova$`Pr(>F)`, digits = 20)
`F-value` = paste("F", as.character(round(lmer1anova$NumDF, digits=5)), ",", as.character(round(lmer1anova$DenDF, digits = 5)), " = ", as.character(round(lmer1anova$`F value`, digits = 5)), sep="")
## compile into output frame
tmpStats = data.frame(descript, testunit, comparison, `Group Size`, `P-value`, significance,`F-value`)
outputStats = rbind(outputStats, tmpStats)
## output all stats details
statStr = paste(gt, "|", descript, "|", comparison, "|", "n =", as.character(nUnit[1]), ", n =", as.character(nUnit[2]), testunit, "|", "p =", as.character(round(lmer1anova$`Pr(>F)`, digits = 5)), "|", "F", as.character(round(lmer1anova$NumDF, digits = 5)), as.character(round(lmer1anova$DenDF, digits = 5)), "=", as.character(round(lmer1anova$`F value`, digits = 5)))
sink(txtFilename, append = TRUE)
print(paste("~~~~~~~ group = ", gt))
print(report(obj.lmer1))
print(statStr)
print(summary(obj.lmer1))
print(anova(obj.lmer1, ddf="Kenward-Roger"))
print ("-------------------------------------------------------")
sink()
closeAllConnections()
write.csv(outputStats, csvFilename)
}
##### proportion of trials with unoccupied zone decoding by fast/slow #####
## this data structure only includes correct trials and post data
## load data file
fileN = "TableData_DayData_360Decoding_ThetaSeq_PCR_OtherZoneDecoding.txt"
dt = "thetaseq_RRZ_OtherZoneDecoding_perday_pergroup_splitbytrialspeed"
propTypes <-c("prop_otherZone_byspeed")
groupTypes <-c ("random", "gamma")
#initialize table structure to add stats to
outputStats = data.frame()
tblFilename = paste0(foldN, fileN)
txtFilename = paste0(foldN, "/stats_lme4_", dt, ".txt") #create text file to save LMM outputs
csvFilename = paste0(foldN, "/stats_lme4_", dt, '.csv') #create a csv that can be used for supplement table
#initialize text file
close(file(txtFilename, open="w" ) )
#read data
mydata <- read.csv(tblFilename, head=T)
for (gt in groupTypes) {
## get data subset of interest
testData <- mydata[mydata$group == gt,]
#factorize variables to be treated as categories/levels instead of numerical value
testData$animal = as.factor(testData$animal)
testData$group = as.factor(testData$group)
testData$speedType = as.factor(testData$speedType)
#helpful info for stats (n per group)
nUnit = c(sum(testData$speedType == 0), sum(testData$speedType == 1))
## loop over property types
## set up helpful info for the model
descript = 'prop trials with unoccupied zone decoding by speed type'
comparison = "within group across speed types"
testunit = "days"
significance = '=IF(F2<0.001,"****",IF(F2<0.005,"***",IF(F2<0.01,"**",IF(F2<0.05,"*","ns"))))' #this is the formula for the excel file, it will evaluate in excel
## model, anova
obj.lmer1 = lmerTest::lmer(propNonLocal ~ speedType + (1|animal), data = testData)
lmer1anova = anova(obj.lmer1, ddf="Kenward-Roger")
## set up strings for the output
`Group Size` = paste(gt, " -- n =", as.character(nUnit[1]), "; n =", as.character(nUnit[2]))
analysisUnit = "trials"
`P-value` = round(lmer1anova$`Pr(>F)`, digits = 20)
`F-value` = paste("F", as.character(round(lmer1anova$NumDF, digits=5)), ",", as.character(round(lmer1anova$DenDF, digits = 5)), " = ", as.character(round(lmer1anova$`F value`, digits = 5)), sep="")
## compile into output frame
tmpStats = data.frame(descript, testunit, comparison, `Group Size`, `P-value`, significance,`F-value`)
outputStats = rbind(outputStats, tmpStats)
## output all stats details
statStr = paste(gt, "|", descript, "|", comparison, "|", "n =", as.character(nUnit[1]), ", n =", as.character(nUnit[2]), testunit, "|", "p =", as.character(round(lmer1anova$`Pr(>F)`, digits = 5)), "|", "F", as.character(round(lmer1anova$NumDF, digits = 5)), as.character(round(lmer1anova$DenDF, digits = 5)), "=", as.character(round(lmer1anova$`F value`, digits = 5)))
sink(txtFilename, append = TRUE)
print(paste("~~~~~~~ group = ", gt))
print(report(obj.lmer1))
print(statStr)
print(summary(obj.lmer1))
print(anova(obj.lmer1, ddf="Kenward-Roger"))
print ("-------------------------------------------------------")
sink()
closeAllConnections()
write.csv(outputStats, csvFilename)
}
##### Ripples - Per Trial - By Group - Unoccupied zone decoding vs. not - Ctrl Speed #####
## this data structure only includes correct trials and post data
## load data file
fileN = "TableData_TrialData_360Decoding_Ripples_otherzone_pertrial.txt"
dt = "ripples_RZ_OtherZoneDecoding_pertrial_pergroup_CtrlSpeed"
propTypes <-c("Ctrl_speed")
groupTypes <-c ("random", "gamma")
#initialize table structure to add stats to
outputStats = data.frame()
tblFilename = paste0(foldN, fileN)
txtFilename = paste0(foldN, "/stats_lme4_", dt, ".txt") #create text file to save LMM outputs
csvFilename = paste0(foldN, "/stats_lme4_", dt, '.csv') #create a csv that can be used for supplement table
#initialize text file
close(file(txtFilename, open="w" ) )
#read data
mydata <- read.csv(tblFilename, head=T)
for (gt in groupTypes) {
## get data subset of interest
testData <- mydata[mydata$group == gt,]
#factorize variables to be treated as categories/levels instead of numerical value
testData$animal = as.factor(testData$animal)
testData$group = as.factor(testData$group)
testData$isNonLocal = as.factor(testData$isNonLocal)
#helpful info for stats (n per group)
nUnit = c(sum(testData$isNonLocal == 0), sum(testData$isNonLocal == 1))
## loop over property types
## set up helpful info for the model
descript = 'Ctrl speed Other zone vs. not'
comparison = "Other zone decoding vs not"
testunit = "trials"
significance = '=IF(F2<0.001,"****",IF(F2<0.005,"***",IF(F2<0.01,"**",IF(F2<0.05,"*","ns"))))' #this is the formula for the excel file, it will evaluate in excel
## model, anova
obj.lmer1 = lmerTest::lmer(Ctrl_speed ~ isNonLocal + (1|animal), data = testData)
lmer1anova = anova(obj.lmer1, ddf="Kenward-Roger")
## set up strings for the output
`Group Size` = paste(gt, " -- n =", as.character(nUnit[1]), "; n =", as.character(nUnit[2]))
analysisUnit = "trials"
`P-value` = round(lmer1anova$`Pr(>F)`, digits = 20)
`F-value` = paste("F", as.character(round(lmer1anova$NumDF, digits=5)), ",", as.character(round(lmer1anova$DenDF, digits = 5)), " = ", as.character(round(lmer1anova$`F value`, digits = 5)), sep="")
## compile into output frame
tmpStats = data.frame(descript, testunit, comparison, `Group Size`, `P-value`, significance,`F-value`)
outputStats = rbind(outputStats, tmpStats)
## output all stats details
statStr = paste(gt, "|", descript, "|", comparison, "|", "n =", as.character(nUnit[1]), ", n =", as.character(nUnit[2]), testunit, "|", "p =", as.character(round(lmer1anova$`Pr(>F)`, digits = 5)), "|", "F", as.character(round(lmer1anova$NumDF, digits = 5)), as.character(round(lmer1anova$DenDF, digits = 5)), "=", as.character(round(lmer1anova$`F value`, digits = 5)))
sink(txtFilename, append = TRUE)
print(paste("~~~~~~~ group = ", gt))
print(report(obj.lmer1))
print(statStr)
print(summary(obj.lmer1))
print(anova(obj.lmer1, ddf="Kenward-Roger"))
print ("-------------------------------------------------------")
sink()
closeAllConnections()
write.csv(outputStats, csvFilename)
}
##### Ripples - Per Trial - By Group - Unoccupied zone decoding vs. not - Lick DI #####
## this data structure only includes correct trials and post data
## load data file
fileN = "TableData_TrialData_360Decoding_Ripples_otherzone_pertrial.txt"
dt = "ripples_RZ_OtherZoneDecoding_pertrial_pergroup_lickDI"
propTypes <-c("lickDI")
groupTypes <-c ("random", "gamma")
#initialize table structure to add stats to
outputStats = data.frame()
tblFilename = paste0(foldN, fileN)
txtFilename = paste0(foldN, "/stats_lme4_", dt, ".txt") #create text file to save LMM outputs
csvFilename = paste0(foldN, "/stats_lme4_", dt, '.csv') #create a csv that can be used for supplement table
#initialize text file
close(file(txtFilename, open="w" ) )
#read data
mydata <- read.csv(tblFilename, head=T)
for (gt in groupTypes) {
## get data subset of interest
testData <- mydata[mydata$group == gt,]
#factorize variables to be treated as categories/levels instead of numerical value
testData$animal = as.factor(testData$animal)
testData$group = as.factor(testData$group)
testData$isNonLocal = as.factor(testData$isNonLocal)
#helpful info for stats (n per group)
nUnit = c(sum(testData$isNonLocal == 0), sum(testData$isNonLocal == 1))
## loop over property types
## set up helpful info for the model
descript = 'Lick DI Other zone vs. not'
comparison = "Other zone decoding vs not"
testunit = "trials"
significance = '=IF(F2<0.001,"****",IF(F2<0.005,"***",IF(F2<0.01,"**",IF(F2<0.05,"*","ns"))))' #this is the formula for the excel file, it will evaluate in excel
## model, anova
obj.lmer1 = lmerTest::lmer(lickDI ~ isNonLocal + (1|animal), data = testData)
lmer1anova = anova(obj.lmer1, ddf="Kenward-Roger")
## set up strings for the output
`Group Size` = paste(gt, " -- n =", as.character(nUnit[1]), "; n =", as.character(nUnit[2]))
analysisUnit = "trials"
`P-value` = round(lmer1anova$`Pr(>F)`, digits = 20)
`F-value` = paste("F", as.character(round(lmer1anova$NumDF, digits=5)), ",", as.character(round(lmer1anova$DenDF, digits = 5)), " = ", as.character(round(lmer1anova$`F value`, digits = 5)), sep="")
## compile into output frame
tmpStats = data.frame(descript, testunit, comparison, `Group Size`, `P-value`, significance,`F-value`)
outputStats = rbind(outputStats, tmpStats)
## output all stats details
statStr = paste(gt, "|", descript, "|", comparison, "|", "n =", as.character(nUnit[1]), ", n =", as.character(nUnit[2]), testunit, "|", "p =", as.character(round(lmer1anova$`Pr(>F)`, digits = 5)), "|", "F", as.character(round(lmer1anova$NumDF, digits = 5)), as.character(round(lmer1anova$DenDF, digits = 5)), "=", as.character(round(lmer1anova$`F value`, digits = 5)))
sink(txtFilename, append = TRUE)
print(paste("~~~~~~~ group = ", gt))
print(report(obj.lmer1))
print(statStr)
print(summary(obj.lmer1))
print(anova(obj.lmer1, ddf="Kenward-Roger"))
print ("-------------------------------------------------------")
sink()
closeAllConnections()
write.csv(outputStats, csvFilename)
}
##### Ripples - Per Trial - By Group - Unoccupied zone decoding vs. not - licklatency #####
## this data structure only includes correct trials and post data
## load data file
fileN = "TableData_TrialData_360Decoding_Ripples_otherzone_pertrial.txt"
dt = "ripples_RZ_OtherZoneDecoding_pertrial_pergroup_licklatency"
propTypes <-c("licklatency_s")
groupTypes <-c ("random", "gamma")
#initialize table structure to add stats to
outputStats = data.frame()
tblFilename = paste0(foldN, fileN)
txtFilename = paste0(foldN, "/stats_lme4_", dt, ".txt") #create text file to save LMM outputs
csvFilename = paste0(foldN, "/stats_lme4_", dt, '.csv') #create a csv that can be used for supplement table
#initialize text file
close(file(txtFilename, open="w" ) )
#read data
mydata <- read.csv(tblFilename, head=T)
for (gt in groupTypes) {
## get data subset of interest
testData <- mydata[mydata$group == gt,]
#factorize variables to be treated as categories/levels instead of numerical value
testData$animal = as.factor(testData$animal)
testData$group = as.factor(testData$group)
testData$isNonLocal = as.factor(testData$isNonLocal)
#helpful info for stats (n per group)
nUnit = c(sum(testData$isNonLocal == 0), sum(testData$isNonLocal == 1))
## loop over property types
## set up helpful info for the model
descript = 'Lick Latency Other zone vs. not'
comparison = "Other zone decoding vs not"
testunit = "trials"
significance = '=IF(F2<0.001,"****",IF(F2<0.005,"***",IF(F2<0.01,"**",IF(F2<0.05,"*","ns"))))' #this is the formula for the excel file, it will evaluate in excel
## model, anova
obj.lmer1 = lmerTest::lmer(licklatency_s ~ isNonLocal + (1|animal), data = testData)
lmer1anova = anova(obj.lmer1, ddf="Kenward-Roger")
## set up strings for the output
`Group Size` = paste(gt, " -- n =", as.character(nUnit[1]), "; n =", as.character(nUnit[2]))
analysisUnit = "trials"
`P-value` = round(lmer1anova$`Pr(>F)`, digits = 20)
`F-value` = paste("F", as.character(round(lmer1anova$NumDF, digits=5)), ",", as.character(round(lmer1anova$DenDF, digits = 5)), " = ", as.character(round(lmer1anova$`F value`, digits = 5)), sep="")
## compile into output frame
tmpStats = data.frame(descript, testunit, comparison, `Group Size`, `P-value`, significance,`F-value`)
outputStats = rbind(outputStats, tmpStats)
## output all stats details
statStr = paste(gt, "|", descript, "|", comparison, "|", "n =", as.character(nUnit[1]), ", n =", as.character(nUnit[2]), testunit, "|", "p =", as.character(round(lmer1anova$`Pr(>F)`, digits = 5)), "|", "F", as.character(round(lmer1anova$NumDF, digits = 5)), as.character(round(lmer1anova$DenDF, digits = 5)), "=", as.character(round(lmer1anova$`F value`, digits = 5)))
sink(txtFilename, append = TRUE)
print(paste("~~~~~~~ group = ", gt))
print(report(obj.lmer1))
print(statStr)
print(summary(obj.lmer1))
print(anova(obj.lmer1, ddf="Kenward-Roger"))
print ("-------------------------------------------------------")
sink()
closeAllConnections()
write.csv(outputStats, csvFilename)
}
